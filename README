This is a D1.0 and D2 binding to the Allegro 5 library: http://liballeg.org/

Should work fine with Allegro 5.0.2. Pretty much all of the cross-platform functions are bound.
Non cross-platform functions are absent, but they will be added eventually.

Tested with LDC/Tango and DMD/Phobos compilers on Linux 64 bit and DMD/Tango on Windows 32 bit (XP).

Installation
============

You have two options here. You can copy all the modules into your project, and just use them like that.
Alternatively, you can compile the binding into a static library for convenience:

Linux:

If you have LDC:

./build_lib_ldc.sh
./build_example_ldc.sh

If you have DMD:

./build_lib_dmd.sh
./build_example_dmd.sh

Windows:

If you have MinGW compiled libraries (< 4.6):

build_lib_dmd.bat

If you have MSVC/DMC compiled DLLs:

build_lib_dmd.bat -version=ALLEGRO_MSVC

Compiling the example
=====================

On Linux you can also compile the example:

If you have LDC:

./build_example_ldc.sh

If you have DMD:

./build_example_dmd.sh

Try the example by running:

./example

It should run and not crash

Notes
=====

* On Windows, you will need to generate the import libraries for Allegro's dll files using implib.exe that you can download here: http://ftp.digitalmars.com/bup.zip

Use it like this:

implib /s allegro_monolith-5.0.0-md.lib allegro_monolith-5.0.0-md.dll

* Note that if you are using MSVC or DMC compiled DLLs you will need to set the version to ALLEGRO_MSVC when compiling your own programs as well as when building the library.

* To remove the console window that spawns whenever you run an Allegro program create a file with a .def extension with these contents:

EXETYPE NT
SUBSYSTEM WINDOWS

Then pass it to dmd when compiling like this:

dmd <your usual stuff goes here> file.def

Bugs
====

On Windows Allegro windows will spawn without window borders (seems to happen only on XP). I don't know why this happens yet.
